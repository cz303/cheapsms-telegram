from telebot import types
from cheapsms import services
import os
token = 'telegram bot token'
is_deploy_version = bool(os.environ.get('PORT'))
server_url = 'https://your_app.herokuapp.com/'

welcome = '–ù–µ–æ—Ñ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç –¥–ª—è —Å–µ—Ä–≤–∏—Å–∞ CheapSMS. –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –≤–∞–∂–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π —Å–∞–π—Ç–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ –≤ —ç—Ç–æ—Ç —É–¥–æ–±–Ω—ã–π –∏ –ø—Ä–æ—Å—Ç–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤ Telegram. –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –±–æ—Ç–∞: @truecrinny.'
nums = '–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≤–∞–º —Å–µ—Ä–≤–∏—Å –∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –µ–≥–æ.'
login = '–í—ã –Ω–µ –≤–æ—à–ª–∏ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç CheapSMS –∏–ª–∏ –≤–∞—à —Ç–æ–∫–µ–Ω —è–≤–ª—è–µ—Ç—Å—è –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–º. –£–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö, —ç—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –Ω–æ–º–µ—Ä–∞, –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞ –∏ –¥—Ä—É–≥–∏—Ö –≤–∞–∂–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π.'
invalid_token = '–í–∞—à —Ç–æ–∫–µ–Ω API —è–≤–ª—è–µ—Ç—Å—è –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ç–æ–∫–µ–Ω.'
token_set = '–¢–æ–∫–µ–Ω API –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ–≥–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.'
invalid_token_set = '–í–≤–µ–¥—ë–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω API —è–≤–ª—è–µ—Ç—Å—è –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–º. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.'
no_token_set = '–í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å/–∑–∞–¥–∞—Ç—å —Å–≤–æ–π —Ç–æ–∫–µ–Ω API. –í—ã –Ω–µ –∑–∞–¥–∞–ª–∏ —Ç–æ–∫–µ–Ω.'
enter_token = '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω API. –ï–≥–æ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –∑–¥–µ—Å—å: https://cheapsms.ru/my/api.'
not_enough_money = '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –Ω–∞ —Å—á–µ—Ç—É –¥–ª—è –ø–æ–∫—É–ø–∫–∏'
no_numbers = '–ù–æ–º–µ—Ä–∞ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å. –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 9:00, 15:00, 21:00.'
operation_canceled = '–û–ø–µ—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞, –¥–µ–Ω—å–≥–∏ –±—ã–ª–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –Ω–∞ –≤–∞—à —Å—á—ë—Ç'
code_message = '–ü–æ–∫—É–ø–∫–∞ –Ω–æ–º–µ—Ä–∞ –¥–ª—è {service}\n–í—ã–¥–∞–Ω–Ω—ã–π –≤–∞–º –Ω–æ–º–µ—Ä: <pre>{number}</pre>\n–ö–æ–¥: <pre>{code}</pre>'
waiting_code = '–æ–∂–∏–¥–∞–Ω–∏–µ...'
buyed_message = '–ü–æ–∫—É–ø–∫–∞ –Ω–æ–º–µ—Ä–∞ –¥–ª—è {service}\n–í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏: {balance}\n–í—ã–¥–∞–Ω–Ω—ã–π –≤–∞–º –Ω–æ–º–µ—Ä: <pre>{number}</pre>'
service_data = '–ù–æ–º–µ—Ä–∞ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: {service}\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö: {number}\n–¶–µ–Ω–∞ –∑–∞ 1 —à—Ç—É–∫—É: {price}'
balance_message = '–ë–∞–ª–∞–Ω—Å –Ω–∞ –≤–∞—à–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ: {balance} —Ä—É–±.'
settings_token = '–í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å/–∑–∞–¥–∞—Ç—å —Å–≤–æ–π —Ç–æ–∫–µ–Ω API. –¢–µ–∫—É—â–∏–π —Ç–æ–∫–µ–Ω: <pre>{token}</pre>'
operation_not_found = '–û–ø–µ—Ä–∞—Ü–∏—è #<pre>{id}</pre> –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å –µ—ë –Ω–∞ —Å–∞–π—Ç–µ: https://cheapsms.ru/my/activates'
operation_end = '–û–ø–µ—Ä–∞—Ü–∏—è #<pre>{id}</pre> –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.'
mailing_end = '–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –°–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {users} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –±–æ—Ç–∞.'
mailing_start = '–ù–∞—á–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏. –ö–æ–≥–¥–∞ –æ–Ω–∞ –±—É–¥–µ—Ç –∑–∞–∫–æ–Ω–µ—á–Ω–∞, –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç –µ—ë —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.'

main_menu_buttons = ['‚òéÔ∏è –ù–æ–º–µ—Ä–∞', 'üí∞ –ë–∞–ª–∞–Ω—Å', '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏']
back_button = '‚óÄÔ∏è –ù–∞–∑–∞–¥'
settings_menu_buttons = ['‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å', back_button]

buy_activation = '–ö—É–ø–∏—Ç—å'
cancel_activation = '–û—Ç–º–µ–Ω–∞'
invalid_code = '–ö–æ–¥ –Ω–µ –ø–æ–¥–æ—à—ë–ª'
number_ready = '–ì–æ—Ç–æ–≤'
end_operation = '–ó–∞–≤–µ—Ä—à–∏—Ç—å'

main_menu = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
numbers_menu = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
settings_menu = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
balance_menu = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
services_buttons = list()
serv = dict()
clients = dict()
num = dict()

main_menu.add(*main_menu_buttons)
settings_menu.add(*settings_menu_buttons)

for name in list(services.values()):
    services_buttons.append(types.KeyboardButton(name))
services_buttons.append(types.KeyboardButton(back_button))
numbers_menu.add(*services_buttons)


def make_inline_buy_button(service):
    buy_keyboard = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton(text=buy_activation, callback_data=service)
    buy_keyboard.add(button)
    return buy_keyboard


def make_inline_tools_buttons(operation_id):
    tools_keyboard = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton(text=cancel_activation, callback_data='-1_status_' + operation_id)
    button2 = types.InlineKeyboardButton(text=number_ready, callback_data='1_status_' + operation_id)
    tools_keyboard.add(button, button2)
    return tools_keyboard


def make_inline_last_button(operation_id):
    upd_keyboard = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton(text=invalid_code, callback_data='3_status_' + operation_id)
    button2 = types.InlineKeyboardButton(text=end_operation, callback_data='6_status_' + operation_id)
    upd_keyboard.add(button, button2)
    return upd_keyboard
